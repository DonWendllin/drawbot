name: DrawBot App Builder

# an other trigger is needed...
# there are double releases
# cause github seems to make a release for each tag
# on:
#   push:
#     tags:
#       - "*"
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:

    runs-on: macos-latest

    steps:
    - name: Install Certificates
      run: |
        echo ${{ secrets.CERTIFICATE_P12 }} | base64 --decode > certificate.p12
        security import certificate.p12 -P ${{ secrets.CERTIFICATE_PASSWORD }}
        security create-keychain -p drawbotKeychain drawbot.keychain
        security default-keychain -s drawbot.keychain
        security set-keychain-settings -l -u -t 8000
        security unlock-keychain -p drawbotKeychain drawbot.keychain
        security import certificate.p12 -k drawbot.keychain -P ${{ secrets.CERTIFICATE_PASSWORD }} -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k drawbotKeychain drawbot.keychain
        rm -fr *.p12
        security find-identity -v -p codesigning
    - name: Set up Python 3.7
      run: |
        curl https://www.python.org/ftp/python/3.7.6/python-3.7.6-macosx10.9.pkg --output pythonInstaller.pkg
        sudo installer -pkg pythonInstaller.pkg -target /
    - name: Check python
      run: |
        python3 --version
        python3 -c "import platform; print('macOS version:', platform.mac_ver()[0])"
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install dependencies
      run: |
        python3 -m pip install -r ./requirements.txt
        python3 -m pip install .
    # - name: Run tests
    #   run: python3 ./tests/runAllTests.py
    - name: Build app
      run: |
        python3 setupApp.py py2app --dmg --codesign "${{ secrets.CODESIGN_NAME }}" --notarizedeveloper "${{ secrets.NOTARIZE_DEVELOPER }}" --notarizePassword "${{ secrets.NOTARIZE_PASSWORD }}"
    - name: Set enviroment for github-release
      id: drawbot_version
      run: |
        DRAWBOT_VERSION=`python3 -c "import drawBot;print(drawBot.__version__)"`
        echo ::set-output name=drawbot_version::"$DRAWBOT_VERSION"
        echo $DRAWBOT_VERSION
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: v${{ steps.drawbot_version.outputs.drawbot_version }}
        release_name: Release ${{ steps.drawbot_version.outputs.drawbot_version }}
        draft: true
        prerelease: false
        body: |
          !!!Edit the Release note!!!
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./dist/DrawBot.dmg
        asset_name: DrawBot.dmg
        asset_content_type: application/dmg

